<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eks on HanHoRang Tech Blog</title>
    <link>https://HanHoRang31.github.io/tags/eks/</link>
    <description>Recent content in eks on HanHoRang Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://HanHoRang31.github.io/tags/eks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[AEWS] EKS VPC CNI Deep Dive</title>
      <link>https://HanHoRang31.github.io/post/aews-eks-vpc-1/</link>
      <pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://HanHoRang31.github.io/post/aews-eks-vpc-1/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS VPC CNI CNI(Container Network Interface) 란 네트워크 플러그인 인터페이스로 k8s 네트워크 환경을 구성해준다. EKS 에서는 기본 CNI로 VPC를 사용한다. 여기서 VPC는 AWS 네트워크 서비스인 AWS VPC로 VPC CIDR을 이용하여 파드 IP 할당 및 통신을 지원한다.
EKS 에서 CNI를 VPC로 사용하면 대표적으로 얻을 수 있는 이점은 두 가지이다.
노드 대역과 파드 대역이 동일하여 다른 노드간 통신시 오버레이가 없어 통신 오버헤드가 감소한다.</description>
    </item>
    
    <item>
      <title>[AEWS] Kubeflow on AWS</title>
      <link>https://HanHoRang31.github.io/post/kubeflow-on-aws/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://HanHoRang31.github.io/post/kubeflow-on-aws/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 지난 블로그 글에 이어서 kubeflow 를 스터디한 내용을 공유하고자 한다. 오늘 주제는 kubeflow 의 인프라 요소로 왜 쿠버네티스에서 머신러닝을 쓰는 것이 좋은 가와 kubeflow 가 AWS 클라우드(EKS)에 올라갔을 때 어떤 이점이 있는 지 확인하겠다.
ML on kubernetes 먼저, 쿠버네티스는 머신러닝 워크플로우를 지원하는 데 매우 유용한 플랫폼으로 이유는 다음과 같이 확인할 수가 있다.</description>
    </item>
    
    <item>
      <title>[AEWS] EKS Spot 인스턴스와 Kubeflow 배포하기</title>
      <link>https://HanHoRang31.github.io/post/spot-and-kubeflow/</link>
      <pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://HanHoRang31.github.io/post/spot-and-kubeflow/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS 구축 및 관리 툴인 eksctl은 다양한 구성 옵션을 제공한다. 공식 문서에 정리가 잘 되어 있으며 이번 블로그 글에서 필자 기준의 흥미로운 옵션을 몇 가지 선택하여 테스트한 내용을 공유하고자 한다.
EKS addon 확장을 위한 AWS IAM 정책 생성 EKS 노드로 Spot 인스턴스 사용하기 Spot 인스턴스를 기반으로한 kubeflow 인프라 구성하기 EKS addon 확장을 위한 AWS IAM 정책 생성 EKS addon는 Amazon EKS에서 제공하는 쿠버네티스 클러스터 구성 요소로, 클러스터의 관리, 네트워킹, 로드 밸런싱 등을 담당하는 확장 기능이다.</description>
    </item>
    
    <item>
      <title>[AEWS] EKS 아키텍처와 Private EKS 클러스터 배포하기</title>
      <link>https://HanHoRang31.github.io/post/aews-1-eks/</link>
      <pubDate>Sat, 29 Apr 2023 07:35:40 +0900</pubDate>
      
      <guid>https://HanHoRang31.github.io/post/aews-1-eks/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS ? Amazon Elastic Kubernetes Service(EKS)는 AWS에서 제공하는 관리형 Kubernetes 서비스다. EKS를 사용하면 Kubernetes 클러스터를 생성, 운영 및 유지 관리할 수 있다.
https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/10-intro/200-eks
EKS의 주요 특징은 다음과 같다.
관리형 서비스: EKS는 Kubernetes 컨트롤 플레인이나 데이터 플레인를 설치, 운영 및 유지 관리시켜주는 서비스이다. 사용자가 인프라 설치, 운영, 유지 관리를 할 필요가 없다.</description>
    </item>
    
    <item>
      <title>[테크 따라잡기] EKS에서 고가용성 Private Docker Registry(Harbor) 구축하기</title>
      <link>https://HanHoRang31.github.io/post/tech-private-docker/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://HanHoRang31.github.io/post/tech-private-docker/</guid>
      <description>1 2 [테크 따라잡기]는 IT 기업 기술 스택 사례를 참고하여 구현하고 정리하는 시리즈입니다. 오로지 기술 성장을 위해 작성할 예정이며 스터디 과정에서 얻는 인사이트를 공유하고자 합니다. 도커 레지스트리인 Harbor에 대해 사용 사례를 조사하던 중 배울 것이 많은 테크 블로그 글을 발견하였다. 그대로 글로만 보기에는 필자가 아쉬워서 직접 구현하고 구현 과정에서 얻는 인사이트를 공유하고자 블로그 글을 작성하였다. 참고한 테크 블로그는 다음의 링크에서 확인이 가능하다.
https://engineering.linecorp.com/ko/blog/harbor-for-private-docker-registry
블로그 글을 요약하자면, Private Docker Registry로 Harbor를 선택하여 구성하였고, 오픈소스 오브젝트 스토리지인 Minio를 통해 스토리지 고가용성을 보장하였다.</description>
    </item>
    
  </channel>
</rss>
