<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>eks on HanHoRang Tech Blog</title>
    <link>https://HanHoRang31.github.io/tags/eks/</link>
    <description>Recent content in eks on HanHoRang Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 12 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://HanHoRang31.github.io/tags/eks/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[A101] Ansible 개념 이해와 k8s 클러스터 관리하기</title>
      <link>https://HanHoRang31.github.io/post/ansible1/</link>
      <pubDate>Fri, 12 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/ansible1/</guid>
      <description>1 2 3 A101 3기(=Ansible 101 Study)는 Ansible 실무 실습 스터디입니다. CloudNet@ 가시다 님이 진행하시며, 책 &amp;#34;앤서블로 시작하는 인프라 자동화&amp;#34;을 기반으로 진행하고 있습니다. 여러 서버를 통합해서 관리할 수 있는 도구를 찾고 있던 도중 Ansible를 알게 되었습니다. 쿠버네티스 실무자인 저에게 Ansible 는 IaC 도구로 테라폼의 영향으로 더 이상 안쓰는 것으로 알았지만, 클러스터 구축 이후의 k8s 운영 관리, 클러스터 외 서버(ec2) 관리 목적으로 사용되더군요. 운영 측면에서 Ansible을 통해 어떻게 서버를 관리할 수 있는 지 알아보겠습니다.</description>
    </item>
    <item>
      <title>왜 서버가 지연될까?</title>
      <link>https://HanHoRang31.github.io/post/why-server-slow/</link>
      <pubDate>Sun, 15 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/why-server-slow/</guid>
      <description>금일 포스트 글에서는 이벤트 대응 프로세스 과정 중 성능 지연에 관해 다뤄보려 합니다. 서버 자원 중 CPU, 메모리, Disk 측면에서 서버 지연 원인, 지표, 처리 방안을 다뤄볼 예정입니다. 또한, 쿠버네티스(EKS) 환경에서 그라파나 대시보드를 통해 서버 지표를 확인할 예정입니다. 참고는 책 [Devops TroubleShooting] 2장을 참고하였습니다.&#xA;CPU, 메모리, Disk 서버 지연을 위한 핵심 지표로 CPU, 메모리, 디스크 개념을 확인하겠습니다. (정리 ChatGPT)&#xA;CPU (Central Processing Unit) 컴퓨터의 뇌와 같은 역할을 합니다. 모든 계산과 처리를 담당하며, 프로그램의 명령어를 해석하고 실행합니다.</description>
    </item>
    <item>
      <title>Locust를 이용한 과부하 테스트</title>
      <link>https://HanHoRang31.github.io/post/locust-test/</link>
      <pubDate>Sun, 01 Oct 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/locust-test/</guid>
      <description>안정적인 서비스를 오픈하기 위한 조건은 무엇일까요? 좋은 아키텍처도 물론 중요하지만, 트래픽을 견딜 수 있는 부하 테스트가 중요합니다. 이번 블로그 글에서는 부하 테스트 관련 글을 작성하고자 합니다.&#xA;이벤트 대응 프로세스 부하 테스트를 알아보기 위해 이벤트 대응 프로세스를 알아보겠습니다. (좋은 영상을 공유해주신 장준엽님 감사합니다! 영상 링크)&#xA;이벤트 랜딩 페이지 점검 : 부하가 제일 몰리는 구간으로 중요시 봐야하는 구간입니다. 페이지 랜딩 용량으로 7MB 정도(문제가 없는 수준)를 추천합니다.&#xA;ELB Pre-Warmining 신청 : AWS ELB도 내부적 하드웨어 장비로 미리 늘려 놔야 합니다.</description>
    </item>
    <item>
      <title>[T1013] 테라폼 모듈로 EKS addon 관리하기</title>
      <link>https://HanHoRang31.github.io/post/terraform-eks-addon/</link>
      <pubDate>Fri, 15 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/terraform-eks-addon/</guid>
      <description>1 2 3 T101 3기(=Terraform 101 Study)는 Terraform 실무 실습 스터디입니다. CloudNet@ 유형욱, 윤서율님이 진행하시며, 책 &amp;#34;테라폼으로 시작하는 IaC&amp;#34;을 기반으로 진행하고 있습니다. 지난 포스트 글에서는 테라폼 클라우드를 통해 EKS를 프로비저닝하였습니다. 프로비저닝은 EKS 모듈을 통해 진행하였는데요. 이번 글에서는 EKS 모듈에 대해 자세히 다뤄볼 예정입니다. 테라폼 레파지토리를 확인하면 EKS 모듈 사용 예제를 비롯하여 ALB 컨트롤러, External DNS와 같은 addon를 확인할 수 있습니다. 이번 글에서는 모듈 예제를 학습하고 EKS와 기본 addon을 프로비저닝하겠습니다. 구성 예제는 필자의 깃허브에서 확인이 가능합니다.</description>
    </item>
    <item>
      <title>[T1013] 코드로 보는 테라폼 문법과 테라폼 클라우드 프로비저닝</title>
      <link>https://HanHoRang31.github.io/post/t101-code-cloud/</link>
      <pubDate>Wed, 06 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/t101-code-cloud/</guid>
      <description>1 2 3 T101 3기(=Terraform 101 Study)는 Terraform 실무 실습 스터디입니다. CloudNet@ 유형욱, 윤서율님이 진행하시며, 책 &amp;#34;테라폼으로 시작하는 IaC&amp;#34;을 기반으로 진행하고 있습니다. 테라폼은 HCL(HashiCorp Configuration Language) 을 통해 인프라를 관리하고 프로비저닝합니다. HCL은 흡사 Go언어와 같이 반복문, 조건문, 함수가 제공되며 HCL 특유의 블록들이 구성되어 인프라를 코드로 관리할 수 있게 도와줍니다. 테라폼 기초 문법 이해로 책을 보는 것을 추천드립니다.&#xA;이번 포스트에서는 그 다음 단계로, 실무 예제를 통해 HCL 문법이 어떻게 사용되는지 살펴보겠습니다.</description>
    </item>
    <item>
      <title>[T1013] 테라폼을 활용한 EKS 클러스터 마이그레이션</title>
      <link>https://HanHoRang31.github.io/post/t101-multicluster-migration/</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/t101-multicluster-migration/</guid>
      <description>1 2 3 T101 3기(=Terraform 101 Study)는 Terraform 실무 실습 스터디입니다. CloudNet@ 유형욱, 윤서율님이 진행하시며, 책 &amp;#34;테라폼으로 시작하는 IaC&amp;#34;을 기반으로 진행하고 있습니다. 들어가기 전 이번 스터디 활동은 T101 3기다. 6주동안 Terraform과 관련된 실무 예제와 노하우에 대해 정리하여 공유할 예정이다. 1주차에는 IaC에 대한 기본 내용과 테라폼 소개, 문법를 스터디하였다. 이에 대한 내용을 정리할까 했지만, 앞 선 기수에 참여하신 분들의 블로그 글이 너무나 잘 되어 있어 다른 방향으로 작성할까 한다. 다른 방향은 평소 필자가 궁금했던 내용, 여러 세미나에서 주워들은 내용들에 대한 실습이 될 것 같다.</description>
    </item>
    <item>
      <title>[T101] 테라폼으로 EKS 관리하기</title>
      <link>https://HanHoRang31.github.io/post/t101-eks-manage/</link>
      <pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/t101-eks-manage/</guid>
      <description>1 2 3 T101(=Terraform 101 Study)는 Terraform 실무 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하시며, 책 &amp;#34;Terraform Up &amp;amp; Running&amp;#34;을 기반으로 진행하고 있습니다. 22년 9월 기준 학습 내용입니다. 블로그 이주로 다시 포스트합니다. 지난 글에서는 테라폼으로 EKS Private 클러스터를 구성하였다. 오늘은 EKS 클러스터 구축 이후, 운영적인 부분으로 테라폼으로 EKS 관리를 위한 추가 설정에 대해 소개하고자 한다.&#xA;추가 설정은 총 3가지로 나눠 다룰 예정이다. 테라폼 상태 관리, 상태 격리와 마지막으로 AWS 서비스에 접근하기 위한 보안 설정이다.</description>
    </item>
    <item>
      <title>[T101] 테라폼으로 EKS 구축하기</title>
      <link>https://HanHoRang31.github.io/post/t101-eks-build/</link>
      <pubDate>Mon, 28 Aug 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/t101-eks-build/</guid>
      <description>1 2 3 T101(=Terraform 101 Study)는 Terraform 실무 실습 스터디입니다. CloudNet@ Gasida(가시다)이 진행하시며, 책 &amp;#34;Terraform Up &amp;amp; Running&amp;#34;을 기반으로 진행하고 있습니다. 22년 9월 기준 학습 내용입니다. 블로그 이주로 다시 포스트합니다. 테라폼 스터디 4주차가 지났다. 스터디를 진행하면서 테라폼 기능과 툴을 학습하였고, 예제로 AWS 서비스 3티어 아키텍처를 구성할 정도가 되었다. 그렇다면 EKS 처럼 AWS 서비스가 복잡하게 얽혀있는 것도 테라폼으로 구축이 가능할까? 라는 생각으로 글을 작성한다.&#xA;구글에 검색해보니 테라폼을 통해 EKS 구축하는 자료들을 쉽게 접할 수 있었다.</description>
    </item>
    <item>
      <title>[아키텍처] AWS로 이해하는 시스템 규모의 확장</title>
      <link>https://HanHoRang31.github.io/post/archi-scale-up/</link>
      <pubDate>Wed, 26 Jul 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/archi-scale-up/</guid>
      <description>이번 블로그 글의 주제로는 AWS 환경에서 시스템 규모의 확장에 따른 아키텍처에 대해 글을 쓰고자 한다. 시스템 규모의 확장은 백명의 사용자에서 수백만 사용자를 지원하는 시스템 설계를 뜻한다. 그렇다면, 처음부터 수백만의 사용자를 지원하는 시스템을 설계하면 되지 않을까라고 생각되지만, 확장에 필요한 서비스들의 비용, 작업 오버헤드 및 러닝 커브때문에 추천하지 않는다. 결국 소수의 사용자에서 몇 백만으로 이르기까지의 지속적인 계랑과 끝없는 개선이 요구되는 과정이라 볼 수 있다.&#xA;그렇기 때문에 시스템 규모 확장를 이해하면 아키텍처 설계 및 이해에 큰 도움이 될 것이라 생각하며 정리한 글을 공유할 예정이다.</description>
    </item>
    <item>
      <title>[AEWS] Gitops CI &amp; CD 구성</title>
      <link>https://HanHoRang31.github.io/post/aews-gitops/</link>
      <pubDate>Fri, 09 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/aews-gitops/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 스터디 마지막 시간에는 EKS Automation 을 주제로 진행하였다. 여기서 Automation 단어는 인프라 프로비저닝 및 코드 배포를 포함하여 소프트웨어 제공 수명 주기의 일부를 자동화를 의미한다. 스터디에서는 모임장님께서 AWS 서비스 기반의 Automation(ACK)를 소개해주셨는데 실무에 도입하기에는 아직 보완할 서비스라 느껴, 다른 주제(gitops ci / cd 파이프라인 구성)를 선정하여 블로그를 작성한다.&#xA;사실 지난 스터디에서 다룬 주제였지만, 내부 트러블슈팅으로 절반(CD 파이프라인 구성) 정도 밖에 구성하지 못하였다.</description>
    </item>
    <item>
      <title>[AEWS] AWS 서비스를 통한 EKS 보안 구성</title>
      <link>https://HanHoRang31.github.io/post/eks-security-allinone/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/eks-security-allinone/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 지난 글에 이어서 AWS 서비스를 통해서 EKS 보안 구성을 한 내용들을 공유한다. 보안 구성 내용은 EKS 워크샵 내용을 참고하여 정리하였다. 보안 구성 내용은 다음과 같다.&#xA;EKS Secret 시크릿 키 관리 : Sealed Secrets + AWS KMS EKS 이상 탐지 모니터링 : Amazon GuardDuty + 사고 대응 EKS 애플리케이션 트래픽 보호 : AWS WAF EKS Secret Key 관리 참고 : EKS 워크샵, AWS 블로그</description>
    </item>
    <item>
      <title>[AEWS] EKS Security 이해</title>
      <link>https://HanHoRang31.github.io/post/eks-security-concept/</link>
      <pubDate>Fri, 02 Jun 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/eks-security-concept/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 스터디도 어느덧 6주차다. 6주차에는 EKS 보안을 주제로 모임장님이 스터디를 진행해주셨다. 스터디 내용으로 EKS 인증 / 인가와 IRSA의 원리를 소개해주셨는데.. 개인적으로 여러 번 돌려볼 정도로 내용이 많이 어려웠다.&#xA;필자 스스로 보안이 다른 분야에 비해 미숙한 부분도 있고,, 아는 내용도 별로 없기 떄문이라 본다. 아마 필자에게 EKS 보안에 대해 소개해달라고 요청받으면 인증 → 인가 → RBAC 수준으로 밖에 답을 못할 것이라 예상한다.</description>
    </item>
    <item>
      <title>[AEWS] EKS Observability 워크샵 학습과 트레이싱 기능 확인하기</title>
      <link>https://HanHoRang31.github.io/post/eks-observability-tracing/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/eks-observability-tracing/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS workshop 아키텍처 이해와 트레이싱 기능 확인하기 스터디에서 관측시스템 관련 좋은 워크샵 링크를 공유해주셨다. 이번 시간에는 해당 워크샵 자료를 토대로 실습 아키텍처 이해와 워크샵 기능 중 트레이싱을 살펴볼 예정이다.&#xA;EKS One Observability Workshop 워크샵 링크 : https://catalog.workshops.aws/observability/en-US&#xA;관측시스템 아키텍처 워크샵에서 제공하는 아키텍처가 AWS 기반의 실 애플리케이션을 운영하는 예제로 좋은 것 같아 정리한다.</description>
    </item>
    <item>
      <title>[AEWS] karpenter DeeP Dive (Feat. 오버프로비저닝, kubeflow)</title>
      <link>https://HanHoRang31.github.io/post/karpenter-deepdive/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/karpenter-deepdive/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 스터디 5주차 시간에는 최근 핫한 노드 수명 주기 관리 솔루션인 Karpenter를 공부하였다. 타 기업 사례에서 자주 보는 주제로서 볼 때마다 시간나면 해야지 해야지.. 생각만 했었는데 이번 스터디로 계기가 되어 정리한다. 이번 블로그 글에서는 Karpenter 에 대해 중점적으로 정리하여 공유할 예정이다. 먼저 Karpenter에 대한 개념과 원리를 살펴볼 것이고, 실습으로 오버프로비저닝과 Kubeflow와 통합하여 테스트를 진행할 것이다.</description>
    </item>
    <item>
      <title>[AEWS] EKS VPC CNI Deep Dive</title>
      <link>https://HanHoRang31.github.io/post/aews-eks-vpc-1/</link>
      <pubDate>Fri, 12 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/aews-eks-vpc-1/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS VPC CNI CNI(Container Network Interface) 란 네트워크 플러그인 인터페이스로 k8s 네트워크 환경을 구성해준다. EKS 에서는 기본 CNI로 VPC를 사용한다. 여기서 VPC는 AWS 네트워크 서비스인 AWS VPC로 VPC CIDR을 이용하여 파드 IP 할당 및 통신을 지원한다.&#xA;EKS 에서 CNI를 VPC로 사용하면 대표적으로 얻을 수 있는 이점은 두 가지이다.&#xA;노드 대역과 파드 대역이 동일하여 다른 노드간 통신시 오버레이가 없어 통신 오버헤드가 감소한다.</description>
    </item>
    <item>
      <title>[AEWS] Kubeflow on AWS</title>
      <link>https://HanHoRang31.github.io/post/kubeflow-on-aws/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/kubeflow-on-aws/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. 지난 블로그 글에 이어서 kubeflow 를 스터디한 내용을 공유하고자 한다. 오늘 주제는 kubeflow 의 인프라 요소로 왜 쿠버네티스에서 머신러닝을 쓰는 것이 좋은 가와 kubeflow 가 AWS 클라우드(EKS)에 올라갔을 때 어떤 이점이 있는 지 확인하겠다.&#xA;ML on kubernetes 먼저, 쿠버네티스는 머신러닝 워크플로우를 지원하는 데 매우 유용한 플랫폼으로 이유는 다음과 같이 확인할 수가 있다.</description>
    </item>
    <item>
      <title>[AEWS] EKS Spot 인스턴스와 Kubeflow 배포하기</title>
      <link>https://HanHoRang31.github.io/post/spot-and-kubeflow/</link>
      <pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/spot-and-kubeflow/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS 구축 및 관리 툴인 eksctl은 다양한 구성 옵션을 제공한다. 공식 문서에 정리가 잘 되어 있으며 이번 블로그 글에서 필자 기준의 흥미로운 옵션을 몇 가지 선택하여 테스트한 내용을 공유하고자 한다.&#xA;EKS addon 확장을 위한 AWS IAM 정책 생성 EKS 노드로 Spot 인스턴스 사용하기 Spot 인스턴스를 기반으로한 kubeflow 인프라 구성하기 EKS addon 확장을 위한 AWS IAM 정책 생성 EKS addon는 Amazon EKS에서 제공하는 쿠버네티스 클러스터 구성 요소로, 클러스터의 관리, 네트워킹, 로드 밸런싱 등을 담당하는 확장 기능이다.</description>
    </item>
    <item>
      <title>[AEWS] EKS 아키텍처와 Private EKS 클러스터 배포하기</title>
      <link>https://HanHoRang31.github.io/post/aews-1-eks/</link>
      <pubDate>Sat, 29 Apr 2023 07:35:40 +0900</pubDate>
      <guid>https://HanHoRang31.github.io/post/aews-1-eks/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS ? Amazon Elastic Kubernetes Service(EKS)는 AWS에서 제공하는 관리형 Kubernetes 서비스다. EKS를 사용하면 Kubernetes 클러스터를 생성, 운영 및 유지 관리할 수 있다.&#xA;https://catalog.us-east-1.prod.workshops.aws/workshops/9c0aa9ab-90a9-44a6-abe1-8dff360ae428/ko-KR/10-intro/200-eks&#xA;EKS의 주요 특징은 다음과 같다.&#xA;관리형 서비스: EKS는 Kubernetes 컨트롤 플레인이나 데이터 플레인를 설치, 운영 및 유지 관리시켜주는 서비스이다. 사용자가 인프라 설치, 운영, 유지 관리를 할 필요가 없다.</description>
    </item>
    <item>
      <title>[테크 따라잡기] EKS에서 고가용성 Private Docker Registry(Harbor) 구축하기</title>
      <link>https://HanHoRang31.github.io/post/tech-private-docker/</link>
      <pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/tech-private-docker/</guid>
      <description>1 2 [테크 따라잡기]는 IT 기업 기술 스택 사례를 참고하여 구현하고 정리하는 시리즈입니다. 오로지 기술 성장을 위해 작성할 예정이며 스터디 과정에서 얻는 인사이트를 공유하고자 합니다. 도커 레지스트리인 Harbor에 대해 사용 사례를 조사하던 중 배울 것이 많은 테크 블로그 글을 발견하였다. 그대로 글로만 보기에는 필자가 아쉬워서 직접 구현하고 구현 과정에서 얻는 인사이트를 공유하고자 블로그 글을 작성하였다. 참고한 테크 블로그는 다음의 링크에서 확인이 가능하다.&#xA;https://engineering.linecorp.com/ko/blog/harbor-for-private-docker-registry&#xA;블로그 글을 요약하자면, Private Docker Registry로 Harbor를 선택하여 구성하였고, 오픈소스 오브젝트 스토리지인 Minio를 통해 스토리지 고가용성을 보장하였다.</description>
    </item>
  </channel>
</rss>
