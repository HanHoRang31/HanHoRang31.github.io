<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Observability on HanHoRang Tech Blog</title>
    <link>https://HanHoRang31.github.io/tags/observability/</link>
    <description>Recent content in Observability on HanHoRang Tech Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://HanHoRang31.github.io/tags/observability/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[AEWS] EKS Observability 워크샵 학습과 트레이싱 기능 확인하기</title>
      <link>https://HanHoRang31.github.io/post/eks-observability-tracing/</link>
      <pubDate>Fri, 26 May 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/eks-observability-tracing/</guid>
      <description>1 2 AWS EKS Workshop Study (=AEWS)는 EKS Workshop 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며,공개된 AWS EKS Workshop을 기반으로 진행하고 있습니다. EKS workshop 아키텍처 이해와 트레이싱 기능 확인하기 스터디에서 관측시스템 관련 좋은 워크샵 링크를 공유해주셨다. 이번 시간에는 해당 워크샵 자료를 토대로 실습 아키텍처 이해와 워크샵 기능 중 트레이싱을 살펴볼 예정이다.&#xA;EKS One Observability Workshop 워크샵 링크 : https://catalog.workshops.aws/observability/en-US&#xA;관측시스템 아키텍처 워크샵에서 제공하는 아키텍처가 AWS 기반의 실 애플리케이션을 운영하는 예제로 좋은 것 같아 정리한다.</description>
    </item>
    <item>
      <title>Loki 최신버전(V2.8.0) DyanmoDB 연동하기</title>
      <link>https://HanHoRang31.github.io/post/loki-2-8-0/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/loki-2-8-0/</guid>
      <description>전글 Loki 최신 버전 설치하기에서 인덱스 DB를 Dynamodb로 연동하지 못했다. 미련이 남아 스터디가 끝난 이후에도 여러 테스트를 해보았고, 마침내 연동을 성공하여 관련 경험을 공유한다.&#xA;먼저, Loki에서 DynamoDB로 연동해야 하는 목적부터 알고 가자. 배경 지식 설명을 위해 Loki 의 지원 스토리지를 다시 확인하겠다.&#xA;https://grafana.com/docs/loki/latest/operations/storage/&#xA;스토리지 연동 목록을 살펴보면 Loki 2.0 이상에서 싱글 스토어(boltdb-shipper)가 추가되었고 연동으로 추천하고 있다. (기본 스토리지도 싱글 스토어이다.) 이유를 살펴보니 비용 감소인데 로컬에서 인덱스를 저장하기 때문에 외부 스토리지에 대한 종속성이 줄기 때문이라 한다.</description>
    </item>
    <item>
      <title>[PKOS] Thanos를 통한 고가용성 모니터링(프로메테우스) 시스템 구축하기</title>
      <link>https://HanHoRang31.github.io/post/pkos2-4-monitoring/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/pkos2-4-monitoring/</guid>
      <description>1 2 Production Kubernetes Online Study (=PKOS)는 쿠버네티스 실무 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며, 책 &amp;#34;24단계 실습으로 정복하는 쿠버네티스&amp;#34;을 기반으로 진행하고 있습니다. 스터디 4주차 시간에는 쿠버네티스 모니터링과 로깅 시스템을 구축하여 기능들을 살펴보았다. 이번 블로그 글에서는 모니터링 시스템에 대해 심화 학습한 내용들을 공유하고자 한다.&#xA;모니터링은 어떤 대상을 감시, 감찰한다는 뜻으로 모니터링의 목적은 지속적인 감시, 감찰을 통해 대상의 상태나 가용성, 변화 등을 확인하고 대비하는 것이다. 모니터링의 개념처럼 쿠버네티스 모니터링도 똑같다. 쿠버네티스에서 특정 기간에 측정한 일련의 숫자(메트릭)에 대해 감시와 감찰을 통해 대상의 상태나 가용성 변화를 확인하고 대비한다고 보면 되겠다.</description>
    </item>
    <item>
      <title>[PKOS] 로깅 PLG 스택, 최신 버전(Loki v2.8.0) 배포하기</title>
      <link>https://HanHoRang31.github.io/post/pkos2-4-logging/</link>
      <pubDate>Sat, 01 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://HanHoRang31.github.io/post/pkos2-4-logging/</guid>
      <description>로깅 (Loki &amp;amp; Promtail ) 1 2 Production Kubernetes Online Study (=PKOS)는 쿠버네티스 실무 실습 스터디입니다. CloudNet@ Gasida(가시다)님이 진행하시며, 책 &amp;#34;24단계 실습으로 정복하는 쿠버네티스&amp;#34;을 기반으로 진행하고 있습니다. Logging? 애플리케이션 실행 중 발생하는 이벤트, 작업, 오류 등의 정보를 기록하는 프로세스이다. 로깅의 주요 목적은 프로그램의 실행 상태를 추적하고, 문제 발생 시 원인을 찾기고, 내부 감사를 기록하기 위함이다. 로그 파일은 시간 순서대로 저장되며, 대부분의 경우 텍스트 파일 또는 데이터베이스에 저장된다.&#xA;컨테이너화된 애플리케이션에 가장 쉽고 가장 널리 사용되는 로깅 방법은 표준 출력(stdout)과 표준 에러(stderr) 스트림에 작성하는 것이다.</description>
    </item>
  </channel>
</rss>
